import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import Story from "../components/Story";
import {
  getWebsiteAndData,
  loadLocalStorage,
  saveLocalStorage,
} from "../helpers";
import useStories from "../hooks/useStories";

export default function Home() {
  const [ipt, setIpt] = useState("");
  //[[id, commentCount]]
  const [list, setList] = useState([]);
  //[id]
  const [idList, setIDList] = useState([]);
  //[{}]
  const [stories] = useStories(idList);

  useEffect(() => {
    const newIDList = list.map((story) => +story[0]);
    setIDList(newIDList);
  }, [list]);

  // Load from local storage
  useEffect(() => {
    let ls = loadLocalStorage();
    if (ls) {
      setList(ls);
    }
  }, []);

  // save to local storage
  useEffect(() => {
    saveLocalStorage(stories);
  }, [stories]);

  function updateStoryComments(id) {
    const listMap = new Map(list);
    const storyViewCount = stories.find((story) => story.id === id).descendants;
    listMap.set(id, storyViewCount);
    console.log(listMap);
    setList(Array.from(listMap));
  }

  const handleForm = (e) => {
    e.preventDefault();
    let webData = getWebsiteAndData(ipt);
    if (webData && list.every((story) => story[0] !== webData)) {
      setList([...list, [webData]]);
      setIpt("");
    } else {
      console.error("errorerrrororeoreos");
    }
  };

  const deleteStory = (id) => {
    const newList = list.filter((story) => story[0] !== id);
    setList(newList);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Check Back Later</h1>
        <form onSubmit={handleForm}>
          <input value={ipt} onChange={(e) => setIpt(e.target.value)} />
          <button>Add</button>
        </form>
        <ol>
          {stories.map((story, i) => (
            <Story
              key={story.url + Math.random()}
              post={story}
              handleDelete={deleteStory}
              previousCount={list[i] && list[i][1]}
              handleClick={updateStoryComments}
            />
          ))}
        </ol>
      </main>
    </div>
  );
}
